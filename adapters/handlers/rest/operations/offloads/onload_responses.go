//                           _       _
// __      _____  __ ___   ___  __ _| |_ ___
// \ \ /\ / / _ \/ _` \ \ / / |/ _` | __/ _ \
//  \ V  V /  __/ (_| |\ V /| | (_| | ||  __/
//   \_/\_/ \___|\__,_| \_/ |_|\__,_|\__\___|
//
//  Copyright Â© 2016 - 2024 Weaviate B.V. All rights reserved.
//
//  CONTACT: hello@weaviate.io
//

// Code generated by go-swagger; DO NOT EDIT.

package offloads

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/weaviate/weaviate/entities/models"
)

// OnloadOKCode is the HTTP code returned for type OnloadOK
const OnloadOKCode int = 200

/*
OnloadOK Backup restoration process successfully started.

swagger:response onloadOK
*/
type OnloadOK struct {

	/*
	  In: Body
	*/
	Payload *models.OnloadResponse `json:"body,omitempty"`
}

// NewOnloadOK creates OnloadOK with default headers values
func NewOnloadOK() *OnloadOK {

	return &OnloadOK{}
}

// WithPayload adds the payload to the onload o k response
func (o *OnloadOK) WithPayload(payload *models.OnloadResponse) *OnloadOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the onload o k response
func (o *OnloadOK) SetPayload(payload *models.OnloadResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *OnloadOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// OnloadUnauthorizedCode is the HTTP code returned for type OnloadUnauthorized
const OnloadUnauthorizedCode int = 401

/*
OnloadUnauthorized Unauthorized or invalid credentials.

swagger:response onloadUnauthorized
*/
type OnloadUnauthorized struct {
}

// NewOnloadUnauthorized creates OnloadUnauthorized with default headers values
func NewOnloadUnauthorized() *OnloadUnauthorized {

	return &OnloadUnauthorized{}
}

// WriteResponse to the client
func (o *OnloadUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

// OnloadForbiddenCode is the HTTP code returned for type OnloadForbidden
const OnloadForbiddenCode int = 403

/*
OnloadForbidden Forbidden

swagger:response onloadForbidden
*/
type OnloadForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewOnloadForbidden creates OnloadForbidden with default headers values
func NewOnloadForbidden() *OnloadForbidden {

	return &OnloadForbidden{}
}

// WithPayload adds the payload to the onload forbidden response
func (o *OnloadForbidden) WithPayload(payload *models.ErrorResponse) *OnloadForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the onload forbidden response
func (o *OnloadForbidden) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *OnloadForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// OnloadNotFoundCode is the HTTP code returned for type OnloadNotFound
const OnloadNotFoundCode int = 404

/*
OnloadNotFound Not Found - offloaded tenant does not exist

swagger:response onloadNotFound
*/
type OnloadNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewOnloadNotFound creates OnloadNotFound with default headers values
func NewOnloadNotFound() *OnloadNotFound {

	return &OnloadNotFound{}
}

// WithPayload adds the payload to the onload not found response
func (o *OnloadNotFound) WithPayload(payload *models.ErrorResponse) *OnloadNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the onload not found response
func (o *OnloadNotFound) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *OnloadNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// OnloadUnprocessableEntityCode is the HTTP code returned for type OnloadUnprocessableEntity
const OnloadUnprocessableEntityCode int = 422

/*
OnloadUnprocessableEntity Invalid onload attempt.

swagger:response onloadUnprocessableEntity
*/
type OnloadUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewOnloadUnprocessableEntity creates OnloadUnprocessableEntity with default headers values
func NewOnloadUnprocessableEntity() *OnloadUnprocessableEntity {

	return &OnloadUnprocessableEntity{}
}

// WithPayload adds the payload to the onload unprocessable entity response
func (o *OnloadUnprocessableEntity) WithPayload(payload *models.ErrorResponse) *OnloadUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the onload unprocessable entity response
func (o *OnloadUnprocessableEntity) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *OnloadUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// OnloadInternalServerErrorCode is the HTTP code returned for type OnloadInternalServerError
const OnloadInternalServerErrorCode int = 500

/*
OnloadInternalServerError An error has occurred while trying to fulfill the request. Most likely the ErrorResponse will contain more information about the error.

swagger:response onloadInternalServerError
*/
type OnloadInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewOnloadInternalServerError creates OnloadInternalServerError with default headers values
func NewOnloadInternalServerError() *OnloadInternalServerError {

	return &OnloadInternalServerError{}
}

// WithPayload adds the payload to the onload internal server error response
func (o *OnloadInternalServerError) WithPayload(payload *models.ErrorResponse) *OnloadInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the onload internal server error response
func (o *OnloadInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *OnloadInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
