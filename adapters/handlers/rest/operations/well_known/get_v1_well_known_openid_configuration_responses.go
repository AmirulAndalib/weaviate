//                           _       _
// __      _____  __ ___   ___  __ _| |_ ___
// \ \ /\ / / _ \/ _` \ \ / / |/ _` | __/ _ \
//  \ V  V /  __/ (_| |\ V /| | (_| | ||  __/
//   \_/\_/ \___|\__,_| \_/ |_|\__,_|\__\___|
//
//  Copyright Â© 2016 - 2023 Weaviate B.V. All rights reserved.
//
//  CONTACT: hello@weaviate.io
//

// Code generated by go-swagger; DO NOT EDIT.

package well_known

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/weaviate/weaviate/entities/models"
)

// GetV1WellKnownOpenidConfigurationOKCode is the HTTP code returned for type GetV1WellKnownOpenidConfigurationOK
const GetV1WellKnownOpenidConfigurationOKCode int = 200

/*
GetV1WellKnownOpenidConfigurationOK Successful response, inspect body

swagger:response getV1WellKnownOpenidConfigurationOK
*/
type GetV1WellKnownOpenidConfigurationOK struct {

	/*
	  In: Body
	*/
	Payload *GetV1WellKnownOpenidConfigurationOKBody `json:"body,omitempty"`
}

// NewGetV1WellKnownOpenidConfigurationOK creates GetV1WellKnownOpenidConfigurationOK with default headers values
func NewGetV1WellKnownOpenidConfigurationOK() *GetV1WellKnownOpenidConfigurationOK {

	return &GetV1WellKnownOpenidConfigurationOK{}
}

// WithPayload adds the payload to the get v1 well known openid configuration o k response
func (o *GetV1WellKnownOpenidConfigurationOK) WithPayload(payload *GetV1WellKnownOpenidConfigurationOKBody) *GetV1WellKnownOpenidConfigurationOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get v1 well known openid configuration o k response
func (o *GetV1WellKnownOpenidConfigurationOK) SetPayload(payload *GetV1WellKnownOpenidConfigurationOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetV1WellKnownOpenidConfigurationOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetV1WellKnownOpenidConfigurationNotFoundCode is the HTTP code returned for type GetV1WellKnownOpenidConfigurationNotFound
const GetV1WellKnownOpenidConfigurationNotFoundCode int = 404

/*
GetV1WellKnownOpenidConfigurationNotFound Not found, no oidc provider present

swagger:response getV1WellKnownOpenidConfigurationNotFound
*/
type GetV1WellKnownOpenidConfigurationNotFound struct {
}

// NewGetV1WellKnownOpenidConfigurationNotFound creates GetV1WellKnownOpenidConfigurationNotFound with default headers values
func NewGetV1WellKnownOpenidConfigurationNotFound() *GetV1WellKnownOpenidConfigurationNotFound {

	return &GetV1WellKnownOpenidConfigurationNotFound{}
}

// WriteResponse to the client
func (o *GetV1WellKnownOpenidConfigurationNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

// GetV1WellKnownOpenidConfigurationInternalServerErrorCode is the HTTP code returned for type GetV1WellKnownOpenidConfigurationInternalServerError
const GetV1WellKnownOpenidConfigurationInternalServerErrorCode int = 500

/*
GetV1WellKnownOpenidConfigurationInternalServerError An error has occurred while trying to fulfill the request. Most likely the ErrorResponse will contain more information about the error.

swagger:response getV1WellKnownOpenidConfigurationInternalServerError
*/
type GetV1WellKnownOpenidConfigurationInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewGetV1WellKnownOpenidConfigurationInternalServerError creates GetV1WellKnownOpenidConfigurationInternalServerError with default headers values
func NewGetV1WellKnownOpenidConfigurationInternalServerError() *GetV1WellKnownOpenidConfigurationInternalServerError {

	return &GetV1WellKnownOpenidConfigurationInternalServerError{}
}

// WithPayload adds the payload to the get v1 well known openid configuration internal server error response
func (o *GetV1WellKnownOpenidConfigurationInternalServerError) WithPayload(payload *models.ErrorResponse) *GetV1WellKnownOpenidConfigurationInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get v1 well known openid configuration internal server error response
func (o *GetV1WellKnownOpenidConfigurationInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetV1WellKnownOpenidConfigurationInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
