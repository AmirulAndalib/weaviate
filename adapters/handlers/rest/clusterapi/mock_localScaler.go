//                           _       _
// __      _____  __ ___   ___  __ _| |_ ___
// \ \ /\ / / _ \/ _` \ \ / / |/ _` | __/ _ \
//  \ V  V /  __/ (_| |\ V /| | (_| | ||  __/
//   \_/\_/ \___|\__,_| \_/ |_|\__,_|\__\___|
//
//  Copyright Â© 2016 - 2024 Weaviate B.V. All rights reserved.
//
//  CONTACT: hello@weaviate.io
//

// Code generated by mockery v2.43.2. DO NOT EDIT.

package clusterapi

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
	scaler "github.com/weaviate/weaviate/usecases/scaler"
)

// MocklocalScaler is an autogenerated mock type for the localScaler type
type MocklocalScaler struct {
	mock.Mock
}

type MocklocalScaler_Expecter struct {
	mock *mock.Mock
}

func (_m *MocklocalScaler) EXPECT() *MocklocalScaler_Expecter {
	return &MocklocalScaler_Expecter{mock: &_m.Mock}
}

// LocalScaleOut provides a mock function with given fields: ctx, className, dist
func (_m *MocklocalScaler) LocalScaleOut(ctx context.Context, className string, dist scaler.ShardDist) error {
	ret := _m.Called(ctx, className, dist)

	if len(ret) == 0 {
		panic("no return value specified for LocalScaleOut")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, scaler.ShardDist) error); ok {
		r0 = rf(ctx, className, dist)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MocklocalScaler_LocalScaleOut_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'LocalScaleOut'
type MocklocalScaler_LocalScaleOut_Call struct {
	*mock.Call
}

// LocalScaleOut is a helper method to define mock.On call
//   - ctx context.Context
//   - className string
//   - dist scaler.ShardDist
func (_e *MocklocalScaler_Expecter) LocalScaleOut(ctx interface{}, className interface{}, dist interface{}) *MocklocalScaler_LocalScaleOut_Call {
	return &MocklocalScaler_LocalScaleOut_Call{Call: _e.mock.On("LocalScaleOut", ctx, className, dist)}
}

func (_c *MocklocalScaler_LocalScaleOut_Call) Run(run func(ctx context.Context, className string, dist scaler.ShardDist)) *MocklocalScaler_LocalScaleOut_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(scaler.ShardDist))
	})
	return _c
}

func (_c *MocklocalScaler_LocalScaleOut_Call) Return(_a0 error) *MocklocalScaler_LocalScaleOut_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MocklocalScaler_LocalScaleOut_Call) RunAndReturn(run func(context.Context, string, scaler.ShardDist) error) *MocklocalScaler_LocalScaleOut_Call {
	_c.Call.Return(run)
	return _c
}

// NewMocklocalScaler creates a new instance of MocklocalScaler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMocklocalScaler(t interface {
	mock.TestingT
	Cleanup(func())
}) *MocklocalScaler {
	mock := &MocklocalScaler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
