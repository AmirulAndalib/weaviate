//                           _       _
// __      _____  __ ___   ___  __ _| |_ ___
// \ \ /\ / / _ \/ _` \ \ / / |/ _` | __/ _ \
//  \ V  V /  __/ (_| |\ V /| | (_| | ||  __/
//   \_/\_/ \___|\__,_| \_/ |_|\__,_|\__\___|
//
//  Copyright Â© 2016 - 2024 Weaviate B.V. All rights reserved.
//
//  CONTACT: hello@weaviate.io
//

// Code generated by mockery v2.43.2. DO NOT EDIT.

package aggregate

import (
	mock "github.com/stretchr/testify/mock"
	graphql "github.com/tailor-inc/graphql"

	models "github.com/weaviate/weaviate/entities/models"
)

// MockpropertyFieldMaker is an autogenerated mock type for the propertyFieldMaker type
type MockpropertyFieldMaker struct {
	mock.Mock
}

type MockpropertyFieldMaker_Expecter struct {
	mock *mock.Mock
}

func (_m *MockpropertyFieldMaker) EXPECT() *MockpropertyFieldMaker_Expecter {
	return &MockpropertyFieldMaker_Expecter{mock: &_m.Mock}
}

// Execute provides a mock function with given fields: class, property, prefix
func (_m *MockpropertyFieldMaker) Execute(class *models.Class, property *models.Property, prefix string) *graphql.Object {
	ret := _m.Called(class, property, prefix)

	if len(ret) == 0 {
		panic("no return value specified for Execute")
	}

	var r0 *graphql.Object
	if rf, ok := ret.Get(0).(func(*models.Class, *models.Property, string) *graphql.Object); ok {
		r0 = rf(class, property, prefix)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*graphql.Object)
		}
	}

	return r0
}

// MockpropertyFieldMaker_Execute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Execute'
type MockpropertyFieldMaker_Execute_Call struct {
	*mock.Call
}

// Execute is a helper method to define mock.On call
//   - class *models.Class
//   - property *models.Property
//   - prefix string
func (_e *MockpropertyFieldMaker_Expecter) Execute(class interface{}, property interface{}, prefix interface{}) *MockpropertyFieldMaker_Execute_Call {
	return &MockpropertyFieldMaker_Execute_Call{Call: _e.mock.On("Execute", class, property, prefix)}
}

func (_c *MockpropertyFieldMaker_Execute_Call) Run(run func(class *models.Class, property *models.Property, prefix string)) *MockpropertyFieldMaker_Execute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*models.Class), args[1].(*models.Property), args[2].(string))
	})
	return _c
}

func (_c *MockpropertyFieldMaker_Execute_Call) Return(_a0 *graphql.Object) *MockpropertyFieldMaker_Execute_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockpropertyFieldMaker_Execute_Call) RunAndReturn(run func(*models.Class, *models.Property, string) *graphql.Object) *MockpropertyFieldMaker_Execute_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockpropertyFieldMaker creates a new instance of MockpropertyFieldMaker. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockpropertyFieldMaker(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockpropertyFieldMaker {
	mock := &MockpropertyFieldMaker{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
