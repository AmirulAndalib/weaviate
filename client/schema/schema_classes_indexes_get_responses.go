//                           _       _
// __      _____  __ ___   ___  __ _| |_ ___
// \ \ /\ / / _ \/ _` \ \ / / |/ _` | __/ _ \
//  \ V  V /  __/ (_| |\ V /| | (_| | ||  __/
//   \_/\_/ \___|\__,_| \_/ |_|\__,_|\__\___|
//
//  Copyright Â© 2016 - 2023 Weaviate B.V. All rights reserved.
//
//  CONTACT: hello@weaviate.io
//

// Code generated by go-swagger; DO NOT EDIT.

package schema

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/weaviate/weaviate/entities/models"
)

// SchemaClassesIndexesGetReader is a Reader for the SchemaClassesIndexesGet structure.
type SchemaClassesIndexesGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SchemaClassesIndexesGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSchemaClassesIndexesGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewSchemaClassesIndexesGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSchemaClassesIndexesGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSchemaClassesIndexesGetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSchemaClassesIndexesGetInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewSchemaClassesIndexesGetOK creates a SchemaClassesIndexesGetOK with default headers values
func NewSchemaClassesIndexesGetOK() *SchemaClassesIndexesGetOK {
	return &SchemaClassesIndexesGetOK{}
}

/*
SchemaClassesIndexesGetOK handles this case with default header values.

OK. Indexes are listed in the response
*/
type SchemaClassesIndexesGetOK struct {
	Payload *models.IndexStatusList
}

func (o *SchemaClassesIndexesGetOK) Error() string {
	return fmt.Sprintf("[GET /schema/{className}/indexes][%d] schemaClassesIndexesGetOK  %+v", 200, o.Payload)
}

func (o *SchemaClassesIndexesGetOK) GetPayload() *models.IndexStatusList {
	return o.Payload
}

func (o *SchemaClassesIndexesGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IndexStatusList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSchemaClassesIndexesGetUnauthorized creates a SchemaClassesIndexesGetUnauthorized with default headers values
func NewSchemaClassesIndexesGetUnauthorized() *SchemaClassesIndexesGetUnauthorized {
	return &SchemaClassesIndexesGetUnauthorized{}
}

/*
SchemaClassesIndexesGetUnauthorized handles this case with default header values.

Unauthorized or invalid credentials.
*/
type SchemaClassesIndexesGetUnauthorized struct {
}

func (o *SchemaClassesIndexesGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /schema/{className}/indexes][%d] schemaClassesIndexesGetUnauthorized ", 401)
}

func (o *SchemaClassesIndexesGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSchemaClassesIndexesGetForbidden creates a SchemaClassesIndexesGetForbidden with default headers values
func NewSchemaClassesIndexesGetForbidden() *SchemaClassesIndexesGetForbidden {
	return &SchemaClassesIndexesGetForbidden{}
}

/*
SchemaClassesIndexesGetForbidden handles this case with default header values.

Forbidden
*/
type SchemaClassesIndexesGetForbidden struct {
	Payload *models.ErrorResponse
}

func (o *SchemaClassesIndexesGetForbidden) Error() string {
	return fmt.Sprintf("[GET /schema/{className}/indexes][%d] schemaClassesIndexesGetForbidden  %+v", 403, o.Payload)
}

func (o *SchemaClassesIndexesGetForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *SchemaClassesIndexesGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSchemaClassesIndexesGetNotFound creates a SchemaClassesIndexesGetNotFound with default headers values
func NewSchemaClassesIndexesGetNotFound() *SchemaClassesIndexesGetNotFound {
	return &SchemaClassesIndexesGetNotFound{}
}

/*
SchemaClassesIndexesGetNotFound handles this case with default header values.

This class does not exist
*/
type SchemaClassesIndexesGetNotFound struct {
	Payload *models.ErrorResponse
}

func (o *SchemaClassesIndexesGetNotFound) Error() string {
	return fmt.Sprintf("[GET /schema/{className}/indexes][%d] schemaClassesIndexesGetNotFound  %+v", 404, o.Payload)
}

func (o *SchemaClassesIndexesGetNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *SchemaClassesIndexesGetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSchemaClassesIndexesGetInternalServerError creates a SchemaClassesIndexesGetInternalServerError with default headers values
func NewSchemaClassesIndexesGetInternalServerError() *SchemaClassesIndexesGetInternalServerError {
	return &SchemaClassesIndexesGetInternalServerError{}
}

/*
SchemaClassesIndexesGetInternalServerError handles this case with default header values.

An error has occurred while trying to fulfill the request. Most likely the ErrorResponse will contain more information about the error.
*/
type SchemaClassesIndexesGetInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *SchemaClassesIndexesGetInternalServerError) Error() string {
	return fmt.Sprintf("[GET /schema/{className}/indexes][%d] schemaClassesIndexesGetInternalServerError  %+v", 500, o.Payload)
}

func (o *SchemaClassesIndexesGetInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *SchemaClassesIndexesGetInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
