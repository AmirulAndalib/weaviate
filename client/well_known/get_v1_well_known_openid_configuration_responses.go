//                           _       _
// __      _____  __ ___   ___  __ _| |_ ___
// \ \ /\ / / _ \/ _` \ \ / / |/ _` | __/ _ \
//  \ V  V /  __/ (_| |\ V /| | (_| | ||  __/
//   \_/\_/ \___|\__,_| \_/ |_|\__,_|\__\___|
//
//  Copyright Â© 2016 - 2023 Weaviate B.V. All rights reserved.
//
//  CONTACT: hello@weaviate.io
//

// Code generated by go-swagger; DO NOT EDIT.

package well_known

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/weaviate/weaviate/entities/models"
)

// GetV1WellKnownOpenidConfigurationReader is a Reader for the GetV1WellKnownOpenidConfiguration structure.
type GetV1WellKnownOpenidConfigurationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetV1WellKnownOpenidConfigurationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetV1WellKnownOpenidConfigurationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetV1WellKnownOpenidConfigurationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetV1WellKnownOpenidConfigurationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetV1WellKnownOpenidConfigurationOK creates a GetV1WellKnownOpenidConfigurationOK with default headers values
func NewGetV1WellKnownOpenidConfigurationOK() *GetV1WellKnownOpenidConfigurationOK {
	return &GetV1WellKnownOpenidConfigurationOK{}
}

/*
GetV1WellKnownOpenidConfigurationOK describes a response with status code 200, with default header values.

Successful response, inspect body
*/
type GetV1WellKnownOpenidConfigurationOK struct {
	Payload *GetV1WellKnownOpenidConfigurationOKBody
}

// IsSuccess returns true when this get v1 well known openid configuration o k response has a 2xx status code
func (o *GetV1WellKnownOpenidConfigurationOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get v1 well known openid configuration o k response has a 3xx status code
func (o *GetV1WellKnownOpenidConfigurationOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 well known openid configuration o k response has a 4xx status code
func (o *GetV1WellKnownOpenidConfigurationOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get v1 well known openid configuration o k response has a 5xx status code
func (o *GetV1WellKnownOpenidConfigurationOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 well known openid configuration o k response a status code equal to that given
func (o *GetV1WellKnownOpenidConfigurationOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get v1 well known openid configuration o k response
func (o *GetV1WellKnownOpenidConfigurationOK) Code() int {
	return 200
}

func (o *GetV1WellKnownOpenidConfigurationOK) Error() string {
	return fmt.Sprintf("[GET /v1/.well-known/openid-configuration][%d] getV1WellKnownOpenidConfigurationOK  %+v", 200, o.Payload)
}

func (o *GetV1WellKnownOpenidConfigurationOK) String() string {
	return fmt.Sprintf("[GET /v1/.well-known/openid-configuration][%d] getV1WellKnownOpenidConfigurationOK  %+v", 200, o.Payload)
}

func (o *GetV1WellKnownOpenidConfigurationOK) GetPayload() *GetV1WellKnownOpenidConfigurationOKBody {
	return o.Payload
}

func (o *GetV1WellKnownOpenidConfigurationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetV1WellKnownOpenidConfigurationOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1WellKnownOpenidConfigurationNotFound creates a GetV1WellKnownOpenidConfigurationNotFound with default headers values
func NewGetV1WellKnownOpenidConfigurationNotFound() *GetV1WellKnownOpenidConfigurationNotFound {
	return &GetV1WellKnownOpenidConfigurationNotFound{}
}

/*
GetV1WellKnownOpenidConfigurationNotFound describes a response with status code 404, with default header values.

Not found, no oidc provider present
*/
type GetV1WellKnownOpenidConfigurationNotFound struct {
}

// IsSuccess returns true when this get v1 well known openid configuration not found response has a 2xx status code
func (o *GetV1WellKnownOpenidConfigurationNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 well known openid configuration not found response has a 3xx status code
func (o *GetV1WellKnownOpenidConfigurationNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 well known openid configuration not found response has a 4xx status code
func (o *GetV1WellKnownOpenidConfigurationNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get v1 well known openid configuration not found response has a 5xx status code
func (o *GetV1WellKnownOpenidConfigurationNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 well known openid configuration not found response a status code equal to that given
func (o *GetV1WellKnownOpenidConfigurationNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get v1 well known openid configuration not found response
func (o *GetV1WellKnownOpenidConfigurationNotFound) Code() int {
	return 404
}

func (o *GetV1WellKnownOpenidConfigurationNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/.well-known/openid-configuration][%d] getV1WellKnownOpenidConfigurationNotFound ", 404)
}

func (o *GetV1WellKnownOpenidConfigurationNotFound) String() string {
	return fmt.Sprintf("[GET /v1/.well-known/openid-configuration][%d] getV1WellKnownOpenidConfigurationNotFound ", 404)
}

func (o *GetV1WellKnownOpenidConfigurationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetV1WellKnownOpenidConfigurationInternalServerError creates a GetV1WellKnownOpenidConfigurationInternalServerError with default headers values
func NewGetV1WellKnownOpenidConfigurationInternalServerError() *GetV1WellKnownOpenidConfigurationInternalServerError {
	return &GetV1WellKnownOpenidConfigurationInternalServerError{}
}

/*
GetV1WellKnownOpenidConfigurationInternalServerError describes a response with status code 500, with default header values.

An error has occurred while trying to fulfill the request. Most likely the ErrorResponse will contain more information about the error.
*/
type GetV1WellKnownOpenidConfigurationInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get v1 well known openid configuration internal server error response has a 2xx status code
func (o *GetV1WellKnownOpenidConfigurationInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 well known openid configuration internal server error response has a 3xx status code
func (o *GetV1WellKnownOpenidConfigurationInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 well known openid configuration internal server error response has a 4xx status code
func (o *GetV1WellKnownOpenidConfigurationInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get v1 well known openid configuration internal server error response has a 5xx status code
func (o *GetV1WellKnownOpenidConfigurationInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get v1 well known openid configuration internal server error response a status code equal to that given
func (o *GetV1WellKnownOpenidConfigurationInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get v1 well known openid configuration internal server error response
func (o *GetV1WellKnownOpenidConfigurationInternalServerError) Code() int {
	return 500
}

func (o *GetV1WellKnownOpenidConfigurationInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/.well-known/openid-configuration][%d] getV1WellKnownOpenidConfigurationInternalServerError  %+v", 500, o.Payload)
}

func (o *GetV1WellKnownOpenidConfigurationInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/.well-known/openid-configuration][%d] getV1WellKnownOpenidConfigurationInternalServerError  %+v", 500, o.Payload)
}

func (o *GetV1WellKnownOpenidConfigurationInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetV1WellKnownOpenidConfigurationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GetV1WellKnownOpenidConfigurationOKBody get v1 well known openid configuration o k body
swagger:model GetV1WellKnownOpenidConfigurationOKBody
*/
type GetV1WellKnownOpenidConfigurationOKBody struct {

	// OAuth Client ID
	ClientID string `json:"clientId,omitempty"`

	// The Location to redirect to
	Href string `json:"href,omitempty"`

	// OAuth Scopes
	Scopes []string `json:"scopes,omitempty"`
}

// Validate validates this get v1 well known openid configuration o k body
func (o *GetV1WellKnownOpenidConfigurationOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get v1 well known openid configuration o k body based on context it is used
func (o *GetV1WellKnownOpenidConfigurationOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetV1WellKnownOpenidConfigurationOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetV1WellKnownOpenidConfigurationOKBody) UnmarshalBinary(b []byte) error {
	var res GetV1WellKnownOpenidConfigurationOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
