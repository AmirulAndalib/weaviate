//                           _       _
// __      _____  __ ___   ___  __ _| |_ ___
// \ \ /\ / / _ \/ _` \ \ / / |/ _` | __/ _ \
//  \ V  V /  __/ (_| |\ V /| | (_| | ||  __/
//   \_/\_/ \___|\__,_| \_/ |_|\__,_|\__\___|
//
//  Copyright Â© 2016 - 2024 Weaviate B.V. All rights reserved.
//
//  CONTACT: hello@weaviate.io
//

// Code generated by go-swagger; DO NOT EDIT.

package nodes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/weaviate/weaviate/entities/models"
)

// NodesBatchStatusGetReader is a Reader for the NodesBatchStatusGet structure.
type NodesBatchStatusGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *NodesBatchStatusGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewNodesBatchStatusGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewNodesBatchStatusGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewNodesBatchStatusGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewNodesBatchStatusGetInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewNodesBatchStatusGetOK creates a NodesBatchStatusGetOK with default headers values
func NewNodesBatchStatusGetOK() *NodesBatchStatusGetOK {
	return &NodesBatchStatusGetOK{}
}

/*
NodesBatchStatusGetOK describes a response with status code 200, with default header values.

Nodes batch stats successfully returned
*/
type NodesBatchStatusGetOK struct {
	Payload *models.NodesBatchStatusResponse
}

// IsSuccess returns true when this nodes batch status get o k response has a 2xx status code
func (o *NodesBatchStatusGetOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this nodes batch status get o k response has a 3xx status code
func (o *NodesBatchStatusGetOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this nodes batch status get o k response has a 4xx status code
func (o *NodesBatchStatusGetOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this nodes batch status get o k response has a 5xx status code
func (o *NodesBatchStatusGetOK) IsServerError() bool {
	return false
}

// IsCode returns true when this nodes batch status get o k response a status code equal to that given
func (o *NodesBatchStatusGetOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the nodes batch status get o k response
func (o *NodesBatchStatusGetOK) Code() int {
	return 200
}

func (o *NodesBatchStatusGetOK) Error() string {
	return fmt.Sprintf("[GET /nodes/batch-status][%d] nodesBatchStatusGetOK  %+v", 200, o.Payload)
}

func (o *NodesBatchStatusGetOK) String() string {
	return fmt.Sprintf("[GET /nodes/batch-status][%d] nodesBatchStatusGetOK  %+v", 200, o.Payload)
}

func (o *NodesBatchStatusGetOK) GetPayload() *models.NodesBatchStatusResponse {
	return o.Payload
}

func (o *NodesBatchStatusGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NodesBatchStatusResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNodesBatchStatusGetUnauthorized creates a NodesBatchStatusGetUnauthorized with default headers values
func NewNodesBatchStatusGetUnauthorized() *NodesBatchStatusGetUnauthorized {
	return &NodesBatchStatusGetUnauthorized{}
}

/*
NodesBatchStatusGetUnauthorized describes a response with status code 401, with default header values.

Unauthorized or invalid credentials.
*/
type NodesBatchStatusGetUnauthorized struct {
}

// IsSuccess returns true when this nodes batch status get unauthorized response has a 2xx status code
func (o *NodesBatchStatusGetUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this nodes batch status get unauthorized response has a 3xx status code
func (o *NodesBatchStatusGetUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this nodes batch status get unauthorized response has a 4xx status code
func (o *NodesBatchStatusGetUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this nodes batch status get unauthorized response has a 5xx status code
func (o *NodesBatchStatusGetUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this nodes batch status get unauthorized response a status code equal to that given
func (o *NodesBatchStatusGetUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the nodes batch status get unauthorized response
func (o *NodesBatchStatusGetUnauthorized) Code() int {
	return 401
}

func (o *NodesBatchStatusGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /nodes/batch-status][%d] nodesBatchStatusGetUnauthorized ", 401)
}

func (o *NodesBatchStatusGetUnauthorized) String() string {
	return fmt.Sprintf("[GET /nodes/batch-status][%d] nodesBatchStatusGetUnauthorized ", 401)
}

func (o *NodesBatchStatusGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewNodesBatchStatusGetForbidden creates a NodesBatchStatusGetForbidden with default headers values
func NewNodesBatchStatusGetForbidden() *NodesBatchStatusGetForbidden {
	return &NodesBatchStatusGetForbidden{}
}

/*
NodesBatchStatusGetForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type NodesBatchStatusGetForbidden struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this nodes batch status get forbidden response has a 2xx status code
func (o *NodesBatchStatusGetForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this nodes batch status get forbidden response has a 3xx status code
func (o *NodesBatchStatusGetForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this nodes batch status get forbidden response has a 4xx status code
func (o *NodesBatchStatusGetForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this nodes batch status get forbidden response has a 5xx status code
func (o *NodesBatchStatusGetForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this nodes batch status get forbidden response a status code equal to that given
func (o *NodesBatchStatusGetForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the nodes batch status get forbidden response
func (o *NodesBatchStatusGetForbidden) Code() int {
	return 403
}

func (o *NodesBatchStatusGetForbidden) Error() string {
	return fmt.Sprintf("[GET /nodes/batch-status][%d] nodesBatchStatusGetForbidden  %+v", 403, o.Payload)
}

func (o *NodesBatchStatusGetForbidden) String() string {
	return fmt.Sprintf("[GET /nodes/batch-status][%d] nodesBatchStatusGetForbidden  %+v", 403, o.Payload)
}

func (o *NodesBatchStatusGetForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *NodesBatchStatusGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNodesBatchStatusGetInternalServerError creates a NodesBatchStatusGetInternalServerError with default headers values
func NewNodesBatchStatusGetInternalServerError() *NodesBatchStatusGetInternalServerError {
	return &NodesBatchStatusGetInternalServerError{}
}

/*
NodesBatchStatusGetInternalServerError describes a response with status code 500, with default header values.

An error has occurred while trying to fulfill the request. Most likely the ErrorResponse will contain more information about the error.
*/
type NodesBatchStatusGetInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this nodes batch status get internal server error response has a 2xx status code
func (o *NodesBatchStatusGetInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this nodes batch status get internal server error response has a 3xx status code
func (o *NodesBatchStatusGetInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this nodes batch status get internal server error response has a 4xx status code
func (o *NodesBatchStatusGetInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this nodes batch status get internal server error response has a 5xx status code
func (o *NodesBatchStatusGetInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this nodes batch status get internal server error response a status code equal to that given
func (o *NodesBatchStatusGetInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the nodes batch status get internal server error response
func (o *NodesBatchStatusGetInternalServerError) Code() int {
	return 500
}

func (o *NodesBatchStatusGetInternalServerError) Error() string {
	return fmt.Sprintf("[GET /nodes/batch-status][%d] nodesBatchStatusGetInternalServerError  %+v", 500, o.Payload)
}

func (o *NodesBatchStatusGetInternalServerError) String() string {
	return fmt.Sprintf("[GET /nodes/batch-status][%d] nodesBatchStatusGetInternalServerError  %+v", 500, o.Payload)
}

func (o *NodesBatchStatusGetInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *NodesBatchStatusGetInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
