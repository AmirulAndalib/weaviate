//                           _       _
// __      _____  __ ___   ___  __ _| |_ ___
// \ \ /\ / / _ \/ _` \ \ / / |/ _` | __/ _ \
//  \ V  V /  __/ (_| |\ V /| | (_| | ||  __/
//   \_/\_/ \___|\__,_| \_/ |_|\__,_|\__\___|
//
//  Copyright Â© 2016 - 2024 Weaviate B.V. All rights reserved.
//
//  CONTACT: hello@weaviate.io
//

// Code generated by mockery v2.43.2. DO NOT EDIT.

package schema

import (
	mock "github.com/stretchr/testify/mock"
	models "github.com/weaviate/weaviate/entities/models"
)

// MockInvertedConfigValidator is an autogenerated mock type for the InvertedConfigValidator type
type MockInvertedConfigValidator struct {
	mock.Mock
}

type MockInvertedConfigValidator_Expecter struct {
	mock *mock.Mock
}

func (_m *MockInvertedConfigValidator) EXPECT() *MockInvertedConfigValidator_Expecter {
	return &MockInvertedConfigValidator_Expecter{mock: &_m.Mock}
}

// Execute provides a mock function with given fields: in
func (_m *MockInvertedConfigValidator) Execute(in *models.InvertedIndexConfig) error {
	ret := _m.Called(in)

	if len(ret) == 0 {
		panic("no return value specified for Execute")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*models.InvertedIndexConfig) error); ok {
		r0 = rf(in)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockInvertedConfigValidator_Execute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Execute'
type MockInvertedConfigValidator_Execute_Call struct {
	*mock.Call
}

// Execute is a helper method to define mock.On call
//   - in *models.InvertedIndexConfig
func (_e *MockInvertedConfigValidator_Expecter) Execute(in interface{}) *MockInvertedConfigValidator_Execute_Call {
	return &MockInvertedConfigValidator_Execute_Call{Call: _e.mock.On("Execute", in)}
}

func (_c *MockInvertedConfigValidator_Execute_Call) Run(run func(in *models.InvertedIndexConfig)) *MockInvertedConfigValidator_Execute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*models.InvertedIndexConfig))
	})
	return _c
}

func (_c *MockInvertedConfigValidator_Execute_Call) Return(_a0 error) *MockInvertedConfigValidator_Execute_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockInvertedConfigValidator_Execute_Call) RunAndReturn(run func(*models.InvertedIndexConfig) error) *MockInvertedConfigValidator_Execute_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockInvertedConfigValidator creates a new instance of MockInvertedConfigValidator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockInvertedConfigValidator(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockInvertedConfigValidator {
	mock := &MockInvertedConfigValidator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
