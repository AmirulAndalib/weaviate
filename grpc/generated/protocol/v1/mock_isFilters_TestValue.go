//                           _       _
// __      _____  __ ___   ___  __ _| |_ ___
// \ \ /\ / / _ \/ _` \ \ / / |/ _` | __/ _ \
//  \ V  V /  __/ (_| |\ V /| | (_| | ||  __/
//   \_/\_/ \___|\__,_| \_/ |_|\__,_|\__\___|
//
//  Copyright Â© 2016 - 2024 Weaviate B.V. All rights reserved.
//
//  CONTACT: hello@weaviate.io
//

// Code generated by mockery v2.43.2. DO NOT EDIT.

package protocol

import mock "github.com/stretchr/testify/mock"

// MockisFilters_TestValue is an autogenerated mock type for the isFilters_TestValue type
type MockisFilters_TestValue struct {
	mock.Mock
}

type MockisFilters_TestValue_Expecter struct {
	mock *mock.Mock
}

func (_m *MockisFilters_TestValue) EXPECT() *MockisFilters_TestValue_Expecter {
	return &MockisFilters_TestValue_Expecter{mock: &_m.Mock}
}

// isFilters_TestValue provides a mock function with given fields:
func (_m *MockisFilters_TestValue) isFilters_TestValue() {
	_m.Called()
}

// MockisFilters_TestValue_isFilters_TestValue_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'isFilters_TestValue'
type MockisFilters_TestValue_isFilters_TestValue_Call struct {
	*mock.Call
}

// isFilters_TestValue is a helper method to define mock.On call
func (_e *MockisFilters_TestValue_Expecter) isFilters_TestValue() *MockisFilters_TestValue_isFilters_TestValue_Call {
	return &MockisFilters_TestValue_isFilters_TestValue_Call{Call: _e.mock.On("isFilters_TestValue")}
}

func (_c *MockisFilters_TestValue_isFilters_TestValue_Call) Run(run func()) *MockisFilters_TestValue_isFilters_TestValue_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockisFilters_TestValue_isFilters_TestValue_Call) Return() *MockisFilters_TestValue_isFilters_TestValue_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockisFilters_TestValue_isFilters_TestValue_Call) RunAndReturn(run func()) *MockisFilters_TestValue_isFilters_TestValue_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockisFilters_TestValue creates a new instance of MockisFilters_TestValue. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockisFilters_TestValue(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockisFilters_TestValue {
	mock := &MockisFilters_TestValue{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
