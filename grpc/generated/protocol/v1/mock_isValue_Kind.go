//                           _       _
// __      _____  __ ___   ___  __ _| |_ ___
// \ \ /\ / / _ \/ _` \ \ / / |/ _` | __/ _ \
//  \ V  V /  __/ (_| |\ V /| | (_| | ||  __/
//   \_/\_/ \___|\__,_| \_/ |_|\__,_|\__\___|
//
//  Copyright Â© 2016 - 2024 Weaviate B.V. All rights reserved.
//
//  CONTACT: hello@weaviate.io
//

// Code generated by mockery v2.43.2. DO NOT EDIT.

package protocol

import mock "github.com/stretchr/testify/mock"

// MockisValue_Kind is an autogenerated mock type for the isValue_Kind type
type MockisValue_Kind struct {
	mock.Mock
}

type MockisValue_Kind_Expecter struct {
	mock *mock.Mock
}

func (_m *MockisValue_Kind) EXPECT() *MockisValue_Kind_Expecter {
	return &MockisValue_Kind_Expecter{mock: &_m.Mock}
}

// isValue_Kind provides a mock function with given fields:
func (_m *MockisValue_Kind) isValue_Kind() {
	_m.Called()
}

// MockisValue_Kind_isValue_Kind_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'isValue_Kind'
type MockisValue_Kind_isValue_Kind_Call struct {
	*mock.Call
}

// isValue_Kind is a helper method to define mock.On call
func (_e *MockisValue_Kind_Expecter) isValue_Kind() *MockisValue_Kind_isValue_Kind_Call {
	return &MockisValue_Kind_isValue_Kind_Call{Call: _e.mock.On("isValue_Kind")}
}

func (_c *MockisValue_Kind_isValue_Kind_Call) Run(run func()) *MockisValue_Kind_isValue_Kind_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockisValue_Kind_isValue_Kind_Call) Return() *MockisValue_Kind_isValue_Kind_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockisValue_Kind_isValue_Kind_Call) RunAndReturn(run func()) *MockisValue_Kind_isValue_Kind_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockisValue_Kind creates a new instance of MockisValue_Kind. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockisValue_Kind(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockisValue_Kind {
	mock := &MockisValue_Kind{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
